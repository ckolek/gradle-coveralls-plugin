buildscript {
    repositories {
        mavenCentral()
    }

    dependencies {
        classpath group: 'me.kolek.gradle', name: 'gradle-coveralls-plugin', version: '1.0.0'
    }
}

group 'me.kolek.gradle'
version '1.1.0-SNAPSHOT'

apply plugin: 'java'
apply plugin: 'jacoco'
apply plugin: 'me.kolek.coveralls'
apply plugin: 'maven'
apply plugin: 'signing'

sourceCompatibility = '1.8'

repositories {
    mavenCentral()
}

dependencies {
    compile gradleApi()
    compile localGroovy()
    compile group: 'com.fasterxml.jackson.core', name: 'jackson-databind', version: '2.9.2'
    runtime group: 'com.fasterxml.jackson.datatype', name: 'jackson-datatype-jsr310', version: '2.9.2'
    compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.3'
    compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.3'
    compile group: 'org.eclipse.jgit', name: 'org.eclipse.jgit', version: '4.9.0.201710071750-r'
}

jacoco {
    toolVersion = "0.7.9"
}

jacocoTestReport {
    reports {
        xml.enabled true
        html.enabled true
    }
}

coveralls {
    repoToken System.env.COVERALLS_REPO_TOKEN
    services {
        travis()
    }
}

task sourcesJar(type: Jar) {
    classifier = 'sources'
    from sourceSets.main.allSource
}

task javadocJar(type: Jar) {
    classifier = 'javadoc'
    from javadoc
}

artifacts {
    archives javadocJar, sourcesJar
}

ext."signing.keyId" = System.env.GPG_KEY_ID
ext."signing.password" = System.env.GPG_PASSPHRASE
ext."signing.secretKeyRingFile" = "$rootProject.projectDir/cd/codesigning.gpg"

signing {
    sign configurations.archives
    required = System.env.containsKey 'CI'
}

uploadArchives {
    repositories {
        mavenDeployer {
            beforeDeployment { MavenDeployment deployment -> signing.signPom(deployment) }

            repository(url: mavenRepoStaging) {
                authentication(userName: "$System.env.OSSRH_JIRA_USERNAME", password: "$System.env.OSSRH_JIRA_PASSWORD")
            }

            snapshotRepository(url: mavenRepoSnapshot) {
                authentication(userName: "$System.env.OSSRH_JIRA_USERNAME", password: "$System.env.OSSRH_JIRA_PASSWORD")
            }

            pom.project {
                name name
                description description
                url 'https://github.com/ckolek/gradle-coveralls-plugin'
                scm {
                    url 'https://github.com/ckolek/gradle-coveralls-plugin'
                    connection 'git@github.com:ckolek/gradle-coveralls-plugin.git'
                    developerConnection 'git@github.com:ckolek/gradle-coveralls-plugin.git'
                }
                licenses {
                    license {
                        name 'MIT License'
                        url 'https://opensource.org/licenses/MIT'
                        distribution 'repo'
                    }
                }
                developers {
                    developer {
                        id 'ckolek'
                        name 'Chris Kolek'
                        email 'christopher.w@kolek.me'
                    }
                }
            }
        }
    }
}